services:
  db:
    image: postgres:16-alpine
    container_name: dev_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    container_name: dev_backend
    command: ["/bin/sh", "/app/entrypoint.sh"]
    environment:
      DJANGO_DEBUG: "1"
      DJANGO_ALLOWED_HOSTS: "*"
      DJANGO_SECRET_KEY: "dev-secret-key"
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"

  frontend:
    build: ./frontend
    container_name: dev_frontend
    command: ["/bin/bash", "/workspace/entrypoint.sh"]   # bash로 실행 (pipefail 오류 방지)
    environment:
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
      REACT_NATIVE_PACKAGER_HOSTNAME: 0.0.0.0
      WATCHMAN_DISABLE: "true"
      NODE_OPTIONS: "--max_old_space_size=4096"
      EXPO_NO_TELEMETRY: "1"
      CHOKIDAR_USEPOLLING: "1"
    volumes:
      - ./frontend:/workspace
      - node_modules:/workspace/node_module
    ports:
      - "8081:8081"    # Metro
      - "19000:19000"  # Expo (http)
      - "19001:19001"  # Expo (ws)
      - "19002:19002"  # Expo DevTools UI
      - "19006:19006"
    tty: true
    stdin_open: true

volumes:
  pgdata:
  node_modules: